unit produto_importaEAN;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, Mask, wwdbedit, Wwdotdot, Wwdbcomb, ExtCtrls,
  Collection, TFlatPanelUnit, Menus, Grids, Wwdbigrd, Wwdbgrid, DB,
  ZAbstractRODataset, ZAbstractDataset, ZDataset, DBCtrls, Buttons,
  AdvGlowButton, RzPanel, dxGDIPlusClasses,
  AdvMetroButton, AdvSmoothPanel, AdvSmoothExpanderPanel, JvExMask, JvToolEdit,
  JvBaseEdits, JvDBControls, IdBaseComponent, IdComponent, IdTCPConnection,
  IdTCPClient, IdHTTP, Data.DBXJSON, System.JSON;

type
  Tfrmproduto_importaEAN = class(TForm)
    FlatPanel1: TFlatPanel;
    combo_localizar: TComboBox;
    Label1: TLabel;
    Label2: TLabel;
    combo_referencia: TComboBox;
    Bevel1: TBevel;
    Label4: TLabel;
    Label5: TLabel;
    Label3: TLabel;
    Label6: TLabel;
    loc: TEdit;
    Label7: TLabel;
    lvoltar: TLabel;
    Label12: TLabel;
    AdvSmoothExpanderPanel1: TAdvSmoothExpanderPanel;
    Label20: TLabel;
    AdvMetroButton1: TAdvMetroButton;
    IdHTTP1: TIdHTTP;
    Button1: TButton;
    Memo1: TMemo;
    Label8: TLabel;
    edtNomeProduto: TEdit;
    Label9: TLabel;
    MaskEdit1: TMaskEdit;
    Label10: TLabel;
    edtUnidadeMedida: TEdit;
    Label11: TLabel;
    edtNcm: TEdit;
    Label13: TLabel;
    edtCest: TEdit;
    procedure Localizarpor1Click(Sender: TObject);
    procedure Referncia1Click(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure locKeyPress(Sender: TObject; var Key: Char);
    procedure locChange(Sender: TObject);
    procedure ConsultarCosmos();
    procedure Button1Click(Sender: TObject);
    procedure ParseJson(aStringJson:string);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmproduto_importaEAN: Tfrmproduto_importaEAN;
  voltar: boolean;

implementation

uses modulo, produto, principal, produto_foto, xloc_servico, tabela_preco;

{$R *.dfm}


procedure Tfrmproduto_importaEAN.ParseJson(aStringJson : string);
var
  LJsonArr   : TJSONArray;
  LJsonValue : TJSONValue;
  LItem     : TJSONValue;
begin
   LJsonArr    := TJSONObject.ParseJSONValue(TEncoding.ASCII.GetBytes(aStringJson),0) as TJSONArray;
   for LJsonValue in LJsonArr do
   begin
      for LItem in TJSONArray(LJsonValue) do
        Writeln(Format('%s : %s',[TJSONPair(LItem).JsonString.Value, TJSONPair(LItem).JsonValue.Value]));
     Writeln;
   end;
end;

procedure Tfrmproduto_importaEAN.Button1Click(Sender: TObject);
begin
if not string.Equals(loc.Text,'') then
    Self.ConsultarCosmos();

end;

procedure Tfrmproduto_importaEAN.ConsultarCosmos();
var
str,url: string;
begin
try
    url := 'https://api.cosmos.bluesoft.com.br/gtins/' + loc.Text + '.json';


    IdHTTP1.Request.CustomHeaders.Values['X-Cosmos-Token']:='h8HyJYjBp4J4U5lfkAi3bw';
    IdHTTP1.Request.ContentType := 'application/json;charset=UTF-8';

    Memo1.Clear;


    Screen.Cursor := crHourGlass;
    str := IdHTTP1.Get(url);

    except on E: Exception do
  Begin
    Memo1.Lines.Add('Resposta da exceção:');
    Memo1.Lines.Add('--> '+E.Message);
  End;
end;

Memo1.Lines.Add('HTTP Status Code:');
Memo1.Lines.Add('--> '+IdHTTP1.ResponseText);

Memo1.Lines.Add('Resposta da consulta:');
Memo1.Lines.Add('--> ' + str);


Memo1.Update;
Screen.Cursor := crDefault;
end;


procedure Tfrmproduto_importaEAN.Localizarpor1Click(Sender: TObject);
var X: INTEGER;
begin

end;

procedure Tfrmproduto_importaEAN.Referncia1Click(Sender: TObject);
var X: INTEGER;
begin

end;

procedure Tfrmproduto_importaEAN.FormClose(Sender: TObject;
  var Action: TCloseAction);
begin
  ACTION := CAFREE;
end;

procedure Tfrmproduto_importaEAN.locKeyPress(Sender: TObject; var Key: Char);
var ref, tipo: string;
begin

end;

procedure Tfrmproduto_importaEAN.locChange(Sender: TObject);
var ref, tipo: string;
begin

end;

end.
