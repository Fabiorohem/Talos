unit UThreadListar;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.DB, Vcl.StdCtrls, Vcl.Grids, pcnConversao,
  Vcl.DBGrids, AdvGlowButton, Vcl.ExtCtrls, AdvMetroButton, AdvSmoothPanel, System.MaskUtils,
  AdvSmoothExpanderPanel, acPathDialog, ACBrBase, ACBrDFe, ACBrNFe, pcnConversaoNFe;

type
  ThreadListar = class(TThread)
  private
    { Private declarations }
    function GerarCodigoDeBarras(Codigo: string):string; //Função para Gerar codigo de Barras Valido
    function Par(Codigo: Integer):Boolean;  //Função para Identificar se o Número é Par
    function LimpaCNPJ(CNPJ: string): string; //Limpar CNPJ
    function zerarcodigo(codigo: string; Qtde: Integer): string;


  protected
    procedure Execute; override;
  end;

implementation


uses Unit_migrador;

procedure ThreadListar.Execute;
var
  F: TSearchRec;
  Ret, I, A, Cont: Integer;
  TempDir, CST, ST, CNPJFILIAL: string;
  CodigoClinte, CodigoProduto: Integer;
begin
  { Place thread code here }
  //Abrir Todos os XML's da Pasta

  with Form1 do begin
    //Desabilitar Abas e Focalizar na aba XML
    cxPageControl1.Properties.ActivePage  :=  cxtbshtXML;
    cxtbshtProduto.Enabled                :=  False;
    cxtbshtCliente.Enabled                :=  False;

    //Apagar Informações do Memo
    mmoXML.Clear;
    //Limpar DataSet Produto e Cliente
    dsProdutoTemp.EmptyDataSet;
    dsClienteTemp.EmptyDataSet;
    dsNFETemp.EmptyDataSet;
    dsItens.EmptyDataSet;
    //Consultar os Ultimos ID da Tabela de Cliente e Produto
    //Cliente
    qry.Close;
    qry.SQL.Clear;
    qry.SQL.Add('select sequencia+1 seq from C000000 where codigo = ' + QuotedStr('000007') );
    qry.Open;
    if (qry.FieldByName('seq').AsString.IsEmpty) then
      CodigoClinte  := 0
    else
      CodigoClinte  := StrToInt(qry.FieldByName('seq').AsString);
    //Produto
    qry.Close;
    qry.SQL.Clear;
    qry.SQL.Add('select sequencia+1 seq from C000000 where codigo = ' + QuotedStr('000025') );
    qry.Open;
    if (qry.FieldByName('seq').AsString.IsEmpty) then
      CodigoProduto :=  0
    else
      CodigoProduto := StrToInt(qry.FieldByName('seq').AsString);

    //Consultar CNPJ da Empresa
    qry.Close;
    qry.SQL.Clear;
    qry.SQL.Add('select cnpj from c000004 where codigo = :codigo');
    qry.ParamByName('codigo').AsString  := '000001';
    qry.Open;

    CNPJFILIAL := LimpaCNPJ(qry.FieldByName('cnpj').AsString);

    //Verificar quantos arquivos a na pasta
    Cont := 0;
    if FindFirst(Diretorio+'\*.xml', faArchive, F) = 0 then begin
      repeat
        if (F.Attr and faArchive) = F.Attr then
          Inc(Cont);
      until FindNext(F) <> 0;
      FindClose(F);
    end;
    //Fazer a Busca no diretorio com XML's
    Ret := FindFirst(Diretorio+'\*.xml', faAnyFile, F);
    mmo1.Lines.Add('Verificando se existe XML no Caminho: '+Diretorio);
    //Zerando posição do progress bar
    pbW7.Position := 0;
    //Atribuindo valor maximo deo progress bar
    pbW7.Max  :=  Cont;

    //Testar se encontrou algum xmls se não encontrar para o processo
    if Ret <> 0 then begin
      ShowMessage('Não Existem XMLs neste Diretorio');
      mmo1.Lines.Add('Não Existem XMLs neste Diretorio...');
      Abort;
    end else begin
      try
        mmo1.Lines.Add('XMLs Encontrados..');
        mmo1.Lines.Add(IntToStr(Cont)+' Arquivos encontrados..');
        lbl3.Caption  := IntToStr(Cont);
        mmo1.Lines.Add('Gravando Registros..');
        dsClienteTemp.Filtered  :=  True;
        dsProdutoTemp.Filtered  :=  True;
        dsNFETemp.Filtered  :=  True;
        while Ret = 0 do begin
          mmoXML.Lines.Add(F.Name);
          TempDir :=  Diretorio+'\'+F.Name;

          ACBrNFe.NotasFiscais.Clear;
          ACBrNFe.NotasFiscais.LoadFromFile(TempDir);

          //Inserir dados do Cliente na Tabela Temporaria
          //Localizar se o Cliente já esta na tabela Temporaria e se a Data de cadastro é a mais recente

          //Verificar se a Nota Importada é de Compra ou de Vend
          //Comparar se o Emitente da Nota é o mesmo da Filial


          if (ACBrNFe.NotasFiscais.Count > 0) then begin

          if (CNPJFILIAL = ACBrNFe.NotasFiscais.Items[0].NFe.Emit.CNPJCPF) then //Nota de Venda
            dsClienteTemp.Filter    := 'CPF = '+QuotedStr(ACBrNFe.NotasFiscais.Items[0].NFe.Dest.CNPJCPF+'')
          else //Nota de Compra
            dsClienteTemp.Filter    := 'CPF = '+QuotedStr(ACBrNFe.NotasFiscais.Items[0].NFe.Emit.CNPJCPF+'');
          if dsClienteTemp.IsEmpty = True then begin
            CodigoClinte                           :=  CodigoClinte  + 1;
            dsClienteTemp.Append;
            dsClienteTempCODIGO.AsString           :=  FormatFloat('######000000', CodigoClinte);
            //Verificar se a Nota Importada é de Compra ou de Venda
            if (CNPJFILIAL = ACBrNFe.NotasFiscais.Items[0].NFe.Emit.CNPJCPF) then begin //Nota de Venda
              dsClienteTempNOME.AsString             :=  ACBrNFe.NotasFiscais.Items[0].NFe.Dest.xNome;
              dsClienteTempAPELIDO.AsString          :=  ACBrNFe.NotasFiscais.Items[0].NFe.Dest.xNome;
              dsClienteTempCPF.AsString              :=  ACBrNFe.NotasFiscais.Items[0].NFe.Dest.CNPJCPF;
              dsClienteTempDATA_CADASTRO.AsDateTime  :=  ACBrNFe.NotasFiscais.Items[0].NFe.Ide.dEmi;
              dsClienteTempENDERECO.AsString         :=  ACBrNFe.NotasFiscais.Items[0].NFe.Dest.EnderDest.xLgr;
              dsClienteTempBAIRRO.AsString           :=  ACBrNFe.NotasFiscais.Items[0].NFe.Dest.EnderDest.xBairro;
              dsClienteTempCIDADE.AsString           :=  ACBrNFe.NotasFiscais.Items[0].NFe.Dest.EnderDest.xMun;
              dsClienteTempUF.AsString               :=  ACBrNFe.NotasFiscais.Items[0].NFe.Dest.EnderDest.UF;
              dsClienteTempCEP.AsString              :=  IntToStr(ACBrNFe.NotasFiscais.Items[0].NFe.Dest.EnderDest.CEP);
              dsClienteTempCOMPLEMENTO.AsString      :=  ACBrNFe.NotasFiscais.Items[0].NFe.Dest.EnderDest.xCpl;
              if Length(ACBrNFe.NotasFiscais.Items[0].NFe.Dest.CNPJCPF) > 11 then //Verifica se é Pessoa Fisica ou Juridica
                dsClienteTempTIPO.AsInteger          :=  2
              else
                dsClienteTempTIPO.AsInteger      :=  1;
              dsClienteTempSITUACAO.AsInteger        :=  1;
              dsClienteTempTELEFONE1.AsString        :=  ACBrNFe.NotasFiscais.Items[0].NFe.Dest.EnderDest.fone;
              dsClienteTempCELULAR.AsString          :=  ACBrNFe.NotasFiscais.Items[0].NFe.Dest.EnderDest.fone;
              dsClienteTempEMAIL.AsString            :=  ACBrNFe.NotasFiscais.Items[0].NFe.Dest.Email;
              dsClienteTempRG.AsString               :=  ACBrNFe.NotasFiscais.Items[0].NFe.Dest.IE;
              dsClienteTempCODREGIAO.AsString        :=  '000001'; //Falta Implementar
              dsClienteTempNUMERO.AsString           :=  ACBrNFe.NotasFiscais.Items[0].NFe.Dest.EnderDest.nro;
              dsClienteTempCNAE.AsString             :=  ''; //Falta Implementar
              dsClienteTempCOD_MUNICIPIO_IBGE.AsString  :=   IntToStr(ACBrNFe.NotasFiscais.Items[0].NFe.Dest.EnderDest.cMun);
              dsClienteTempIBGE.AsString             :=  Copy(IntToStr(ACBrNFe.NotasFiscais.Items[0].NFe.Dest.EnderDest.cMun), 2, 5);
              dsClienteTempCPAIS.AsString            :=  IntToStr(ACBrNFe.NotasFiscais.Items[0].NFe.Dest.EnderDest.cPais);
              dsClienteTempDPAIS.AsString            :=  ACBrNFe.NotasFiscais.Items[0].NFe.Dest.EnderDest.xPais;
            end else begin
              dsClienteTempNOME.AsString             := ACBrNFe.NotasFiscais.Items[0].NFe.Emit.xNome;
              if (ACBrNFe.NotasFiscais.Items[0].NFe.Emit.xFant.IsEmpty) then
                dsClienteTempNOME.AsString           := ACBrNFe.NotasFiscais.Items[0].NFe.Emit.xNome
              else
                dsClienteTempAPELIDO.AsString    := ACBrNFe.NotasFiscais.Items[0].NFe.Emit.xFant;

              dsClienteTempCPF.AsString              :=  ACBrNFe.NotasFiscais.Items[0].NFe.Emit.CNPJCPF;
              dsClienteTempDATA_CADASTRO.AsDateTime  :=  ACBrNFe.NotasFiscais.Items[0].NFe.Ide.dEmi;
              dsClienteTempENDERECO.AsString         :=  ACBrNFe.NotasFiscais.Items[0].NFe.Emit.EnderEmit.xLgr;
              dsClienteTempBAIRRO.AsString           :=  ACBrNFe.NotasFiscais.Items[0].NFe.Emit.EnderEmit.xBairro;
              dsClienteTempCIDADE.AsString           :=  ACBrNFe.NotasFiscais.Items[0].NFe.Emit.EnderEmit.xMun;
              dsClienteTempUF.AsString               :=  ACBrNFe.NotasFiscais.Items[0].NFe.Emit.EnderEmit.UF;
              dsClienteTempCEP.AsString              :=  IntToStr(ACBrNFe.NotasFiscais.Items[0].NFe.Emit.EnderEmit.CEP);
              dsClienteTempCOMPLEMENTO.AsString      :=  ACBrNFe.NotasFiscais.Items[0].NFe.Emit.EnderEmit.xCpl;
              if Length(ACBrNFe.NotasFiscais.Items[0].NFe.Emit.CNPJCPF) > 11 then //Verifica se é Pessoa Fisica ou Juridica
                dsClienteTempTIPO.AsInteger          :=  2
              else
                dsClienteTempTIPO.AsInteger      :=  1;
              dsClienteTempSITUACAO.AsInteger        :=  1;
              dsClienteTempTELEFONE1.AsString        :=  ACBrNFe.NotasFiscais.Items[0].NFe.Emit.EnderEmit.fone;
              dsClienteTempCELULAR.AsString          :=  ACBrNFe.NotasFiscais.Items[0].NFe.Emit.EnderEmit.fone;
              dsClienteTempRG.AsString               :=  ACBrNFe.NotasFiscais.Items[0].NFe.Emit.IE;
              dsClienteTempCODREGIAO.AsString        :=  '000001'; //Falta Implementar
              dsClienteTempNUMERO.AsString           :=  ACBrNFe.NotasFiscais.Items[0].NFe.Emit.EnderEmit.nro;
              dsClienteTempCNAE.AsString             :=  ''; //Falta Implementar
              dsClienteTempCOD_MUNICIPIO_IBGE.AsString  :=   IntToStr(ACBrNFe.NotasFiscais.Items[0].NFe.Emit.EnderEmit.cMun);
              dsClienteTempIBGE.AsString             :=  Copy(IntToStr(ACBrNFe.NotasFiscais.Items[0].NFe.Emit.EnderEmit.cMun), 2, 5);
              dsClienteTempCPAIS.AsString            :=  IntToStr(ACBrNFe.NotasFiscais.Items[0].NFe.Emit.EnderEmit.cPais);
              dsClienteTempDPAIS.AsString            :=  ACBrNFe.NotasFiscais.Items[0].NFe.Emit.EnderEmit.xPais;
            end;
            dsClienteTemp.Post;
          end else if  dsClienteTempDATA_CADASTRO.AsDateTime < ACBrNFe.NotasFiscais.Items[0].NFe.Ide.dEmi then begin
            dsClienteTemp.Edit;
            //Verificar se a Nota Importada é de Compra ou de Venda
            if (CNPJFILIAL = ACBrNFe.NotasFiscais.Items[0].NFe.Emit.CNPJCPF) then begin //Nota de Venda
              dsClienteTempNOME.AsString             :=  ACBrNFe.NotasFiscais.Items[0].NFe.Dest.xNome;
              dsClienteTempAPELIDO.AsString          :=  ACBrNFe.NotasFiscais.Items[0].NFe.Dest.xNome;
              dsClienteTempDATA_CADASTRO.AsDateTime  :=  ACBrNFe.NotasFiscais.Items[0].NFe.Ide.dEmi;
              dsClienteTempENDERECO.AsString         :=  ACBrNFe.NotasFiscais.Items[0].NFe.Dest.EnderDest.xLgr;
              dsClienteTempBAIRRO.AsString           :=  ACBrNFe.NotasFiscais.Items[0].NFe.Dest.EnderDest.xBairro;
              dsClienteTempCIDADE.AsString           :=  ACBrNFe.NotasFiscais.Items[0].NFe.Dest.EnderDest.xMun;
              dsClienteTempUF.AsString               :=  ACBrNFe.NotasFiscais.Items[0].NFe.Dest.EnderDest.UF;
              dsClienteTempCEP.AsString              :=  IntToStr(ACBrNFe.NotasFiscais.Items[0].NFe.Dest.EnderDest.CEP);
              dsClienteTempCOMPLEMENTO.AsString      :=  ACBrNFe.NotasFiscais.Items[0].NFe.Dest.EnderDest.xCpl;
              dsClienteTempTELEFONE1.AsString        :=  ACBrNFe.NotasFiscais.Items[0].NFe.Dest.EnderDest.fone;
              dsClienteTempCELULAR.AsString          :=  ACBrNFe.NotasFiscais.Items[0].NFe.Dest.EnderDest.fone;
              dsClienteTempEMAIL.AsString            :=  ACBrNFe.NotasFiscais.Items[0].NFe.Dest.Email;
              dsClienteTempRG.AsString               :=  ACBrNFe.NotasFiscais.Items[0].NFe.Dest.IE;
              dsClienteTempNUMERO.AsString           :=  ACBrNFe.NotasFiscais.Items[0].NFe.Dest.EnderDest.nro;
              dsClienteTempCOD_MUNICIPIO_IBGE.AsString  :=   IntToStr(ACBrNFe.NotasFiscais.Items[0].NFe.Dest.EnderDest.cMun);
              dsClienteTempIBGE.AsString             :=  Copy(IntToStr(ACBrNFe.NotasFiscais.Items[0].NFe.Dest.EnderDest.cMun), 2, 5);
              dsClienteTempCPAIS.AsString            :=  IntToStr(ACBrNFe.NotasFiscais.Items[0].NFe.Dest.EnderDest.cPais);
              dsClienteTempDPAIS.AsString            :=  ACBrNFe.NotasFiscais.Items[0].NFe.Dest.EnderDest.xPais;
            end else begin
              dsClienteTempNOME.AsString             := ACBrNFe.NotasFiscais.Items[0].NFe.Emit.xNome;
              if (ACBrNFe.NotasFiscais.Items[0].NFe.Emit.xFant.IsEmpty) then
                dsClienteTempNOME.AsString           := ACBrNFe.NotasFiscais.Items[0].NFe.Emit.xNome
              else
                dsClienteTempAPELIDO.AsString    := ACBrNFe.NotasFiscais.Items[0].NFe.Emit.xFant;
              dsClienteTempDATA_CADASTRO.AsDateTime  :=  ACBrNFe.NotasFiscais.Items[0].NFe.Ide.dEmi;
              dsClienteTempENDERECO.AsString         :=  ACBrNFe.NotasFiscais.Items[0].NFe.Emit.EnderEmit.xLgr;
              dsClienteTempBAIRRO.AsString           :=  ACBrNFe.NotasFiscais.Items[0].NFe.Emit.EnderEmit.xBairro;
              dsClienteTempCIDADE.AsString           :=  ACBrNFe.NotasFiscais.Items[0].NFe.Emit.EnderEmit.xMun;
              dsClienteTempUF.AsString               :=  ACBrNFe.NotasFiscais.Items[0].NFe.Emit.EnderEmit.UF;
              dsClienteTempCEP.AsString              :=  IntToStr(ACBrNFe.NotasFiscais.Items[0].NFe.Emit.EnderEmit.CEP);
              dsClienteTempCOMPLEMENTO.AsString      :=  ACBrNFe.NotasFiscais.Items[0].NFe.Emit.EnderEmit.xCpl;
              dsClienteTempTELEFONE1.AsString        :=  ACBrNFe.NotasFiscais.Items[0].NFe.Emit.EnderEmit.fone;
              dsClienteTempCELULAR.AsString          :=  ACBrNFe.NotasFiscais.Items[0].NFe.Emit.EnderEmit.fone;
              dsClienteTempRG.AsString               :=  ACBrNFe.NotasFiscais.Items[0].NFe.Emit.IE;
              dsClienteTempNUMERO.AsString           :=  ACBrNFe.NotasFiscais.Items[0].NFe.Emit.EnderEmit.nro;
              dsClienteTempCOD_MUNICIPIO_IBGE.AsString  :=   IntToStr(ACBrNFe.NotasFiscais.Items[0].NFe.Emit.EnderEmit.cMun);
              dsClienteTempIBGE.AsString             :=  Copy(IntToStr(ACBrNFe.NotasFiscais.Items[0].NFe.Emit.EnderEmit.cMun), 2, 5);
              dsClienteTempCPAIS.AsString            :=  IntToStr(ACBrNFe.NotasFiscais.Items[0].NFe.Emit.EnderEmit.cPais);
              dsClienteTempDPAIS.AsString            :=  ACBrNFe.NotasFiscais.Items[0].NFe.Emit.EnderEmit.xPais;
            end;
            dsClienteTemp.Post;
          end;
          //Fim Inserir Clientes
          //Inserir Dados do Produto na Tabela Temporaria
          for I := 0 to (ACBrNFe.NotasFiscais.Items[0].NFe.Det.Count -1) do begin
            //Ferificar se o produto Existe na Tabela Temporaria
            dsProdutoTemp.Filter  :=  'CODBARRA = '+QuotedStr(ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Prod.cEAN+'') + 'OR PRODUTO = '+QuotedStr(ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Prod.xProd+'');
            if dsProdutoTemp.IsEmpty = True then begin
              CodigoProduto                               :=  CodigoProduto + 1;
              dsProdutoTemp.Append;
              dsProdutoTempCODIGO.AsString                :=  FormatFloat('######000000', CodigoProduto);
              if (ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Prod.cEAN.IsEmpty = True) then
                dsProdutoTempCODBARRA.AsString            :=  GerarCodigoDeBarras(FormatFloat('9781########00000000', CodigoProduto))
              else
                dsProdutoTempCODBARRA.AsString          :=  ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Prod.cEAN;
              dsProdutoTempPRODUTO.AsString               :=  ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Prod.xProd;
              dsProdutoTempDATA_CADASTRO.AsDateTime       :=  ACBrNFe.NotasFiscais.Items[0].NFe.Ide.dEmi;
              dsProdutoTempORIGEM.AsInteger               := StrToInt(pcnConversao.OrigToStr(ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Imposto.ICMS.orig));
              dsProdutoTempPRECOCUSTO.AsFloat             := ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Prod.vUnCom;
              dsProdutoTempPRECOVENDA.AsFloat             := ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Prod.vUnCom;
              dsProdutoTempCST.AsString                   := FormatFloat('###000', StrToInt(pcnConversao.CSTICMSToStr(ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Imposto.ICMS.CST)));
              CST                                         := FormatFloat('###000', StrToInt(pcnConversao.CSTICMSToStr(ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Imposto.ICMS.CST)));
              dsProdutoTempALIQUOTA.AsFloat               := ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Imposto.ICMS.pICMS;
              if (CST = '020') or (CST = '050') or (CST = '030') or (CST = '000') then begin
                dsProdutoTempSITUACAO_TRIBUTARIA.AsString   :=  'T';
                ST                                          :=  'T';
              end else if (CST = '040') or (CST = '041') or (CST = '090') then begin
                dsProdutoTempSITUACAO_TRIBUTARIA.AsString   :=  'I';
                ST                                          :=  'I';
              end else if (CST = '051') or (CST = '070') or (CST = '060') or (CST = '010') then begin
                dsProdutoTempSITUACAO_TRIBUTARIA.AsString   :=  'F';
                ST                                          :=  'F';
              end;
              //Verificar se a Nota Importada é de Compra ou de Venda
              if (CNPJFILIAL = ACBrNFe.NotasFiscais.Items[0].NFe.Emit.CNPJCPF) then begin//Nota de Venda
                dsProdutoTempCSOSN.AsString               := FormatFloat('###000', StrToInt(pcnConversao.CSOSNIcmsToStr(ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Imposto.ICMS.CSOSN)));
              end else begin
                if (ST = 'T') then
                  dsProdutoTempCSOSN.AsString           :=  '102'
                else if (ST = 'I') then
                dsProdutoTempCSOSN.AsString       :=  '102'
                else if (ST = 'F') then
                  dsProdutoTempCSOSN.AsString   :=  '500';
              end;
              dsProdutoTempNCM.AsString                   := ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Prod.NCM;
              dsProdutoTempCLASSIFICACAO_FISCAL.AsString  := ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Prod.NCM;
              //Verificar se a Nota Importada é de Compra ou de Venda
              if (CNPJFILIAL = ACBrNFe.NotasFiscais.Items[0].NFe.Emit.CNPJCPF) then begin //Nota de Venda
                dsProdutoTempIND_CFOP_VENDA_DENTRO.AsString := ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Prod.CFOP;
                dsProdutoTempIND_CFOP_VENDA_FORA.AsString   := ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Prod.CFOP;
                dsProdutoTempIND_CFOP_NFCE.AsString         := ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Prod.CFOP;
              end else begin
                if (ST = 'T') or (ST = 'I') then begin
                  dsProdutoTempIND_CFOP_VENDA_DENTRO.AsString :=  '5102';
                  dsProdutoTempIND_CFOP_VENDA_FORA.AsString   :=  '5102';
                  dsProdutoTempIND_CFOP_NFCE.AsString         :=  '5102';
                end else if (ST = 'F') then begin
                  dsProdutoTempIND_CFOP_VENDA_DENTRO.AsString :=  '5405';
                  dsProdutoTempIND_CFOP_VENDA_FORA.AsString   :=  '5405';
                  dsProdutoTempIND_CFOP_NFCE.AsString         :=  '5405';
                end;
              end;
              dsProdutoTempUNIDADE.AsString               := ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Prod.uCom;
              dsProdutoTempNOTAFISCAL.AsString            := IntToStr(ACBrNFe.NotasFiscais.Items[0].NFe.Ide.nNF);
              dsProdutoTempESTOQUE.AsFloat                := ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Prod.qCom;
              dsProdutoTempTIPO.AsString                  := '00 - Mercadoria para Revenda';
              dsProdutoTempSITUACAO.AsInteger             := 0;
              dsProdutoTempPISCOFINS.AsString             := 'N';
              dsProdutoTempIAT.AsString                   := 'T';
              dsProdutoTempIPPT.AsString                  := 'T';
              dsProdutoTempCEST.AsString                  := ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Prod.CEST;
              dsProdutoTemp.Post;
            end else if dsProdutoTempDATA_CADASTRO.AsDateTime < ACBrNFe.NotasFiscais.Items[0].NFe.Ide.dEmi then begin
              dsProdutoTemp.Edit;
              dsProdutoTempDATA_CADASTRO.AsDateTime       :=  ACBrNFe.NotasFiscais.Items[0].NFe.Ide.dEmi;
              dsProdutoTempPRECOCUSTO.AsFloat             :=  ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Prod.vUnCom;
              dsProdutoTempPRECOVENDA.AsFloat             :=  ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Prod.vUnCom;
              dsProdutoTemp.Post;
            end;
          end;
          //Fim Inserir Produto
          if (CNPJFILIAL = ACBrNFe.NotasFiscais.Items[0].NFe.Emit.CNPJCPF) then begin
            dsNFETemp.Filter := 'NUMERO='+QuotedStr(zerarcodigo(IntToStr(ACBrNFe.NotasFiscais.Items[0].NFe.ide.nNF),6));
            if dsNFETemp.RecordCount = 0 then begin
              dsNFETemp.Append;
              dsNFETempCODIGO.AsString :=  zerarcodigo(IntToStr(ACBrNFe.NotasFiscais.Items[0].NFe.ide.nNF),6);
              dsNFETempNUMERO.AsString := zerarcodigo(IntToStr(ACBrNFe.NotasFiscais.Items[0].NFe.ide.nNF),6);
              dsNFETempCFOP.AsString := ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[0].Prod.CFOP;
              dsNFETempDATA.AsDateTime := ACBrNFe.NotasFiscais.Items[0].NFe.ide.dEmi;
              dsNFETempNOMECLIENTE.AsString := ACBrNFe.NotasFiscais.Items[0].NFe.Dest.xNome;
              dsNFETempVALOR_PRODUTOS.AsFloat := ACBrNFe.NotasFiscais.Items[0].NFe.Total.ICMSTot.vProd;
              dsNFETempTOTAL_NOTA.AsFloat := ACBrNFe.NotasFiscais.Items[0].NFe.Total.ICMSTot.vNF;
              dsNFETempBASE_CALCULO.AsFloat := ACBrNFe.NotasFiscais.Items[0].NFe.Total.ICMSTot.vBC;
              dsNFETempVALOR_ICMS.AsFloat := ACBrNFe.NotasFiscais.Items[0].NFe.Total.ICMSTot.vICMS;
              dsNFETempBASE_SUB.AsFloat := ACBrNFe.NotasFiscais.Items[0].NFe.Total.ICMSTot.vBCST;
              dsNFETempICMS_SUB.AsFloat := ACBrNFe.NotasFiscais.Items[0].NFe.Total.ICMSTot.vST;
              dsNFETempFRETE.AsFloat := ACBrNFe.NotasFiscais.Items[0].NFe.Total.ICMSTot.vFrete;
              dsNFETempSEGURO.AsFloat := ACBrNFe.NotasFiscais.Items[0].NFe.Total.ICMSTot.vSeg;
              dsNFETempOUTRAS_DESPESAS.AsFloat := ACBrNFe.NotasFiscais.Items[0].NFe.Total.ICMSTot.vOutro;
              dsNFETempVALOR_TOTAL_IPI.AsFloat := ACBrNFe.NotasFiscais.Items[0].NFe.Total.ICMSTot.vIPI;
              dsNFETempITENS.AsFloat := ACBrNFe.NotasFiscais.Items[0].NFe.Det.Count;
              dsNFETempDESCONTO.AsFloat := ACBrNFe.NotasFiscais.Items[0].NFe.Total.ICMSTot.vDesc;
              dsNFETempFRETE_CONTA.AsString := modFreteToStr(ACBrNFe.NotasFiscais.Items[0].NFe.Transp.modFrete);
              if ACBrNFe.NotasFiscais.Items[0].NFe.Transp.Vol.Count > 0 then begin
                dsNFETempVOL_QTDE.AsFloat := ACBrNFe.NotasFiscais.Items[0].NFe.Transp.Vol.Items[0].qVol;
                dsNFETempVOL_ESPECIE.AsString := ACBrNFe.NotasFiscais.Items[0].NFe.Transp.Vol.Items[0].esp;
                dsNFETempVOL_MARCA.AsString := ACBrNFe.NotasFiscais.Items[0].NFe.Transp.Vol.Items[0].marca;
                dsNFETempVOL_NUMERO.AsString := ACBrNFe.NotasFiscais.Items[0].NFe.Transp.Vol.Items[0].nVol;
                dsNFETempPESO_LIQUIDO.AsFloat := ACBrNFe.NotasFiscais.Items[0].NFe.Transp.Vol.Items[0].pesoL;
                dsNFETempPESO_BRUTO.AsFloat := ACBrNFe.NotasFiscais.Items[0].NFe.Transp.Vol.Items[0].pesoB;
              end;
              dsNFETempPLACA.AsString := ACBrNFe.NotasFiscais.Items[0].NFe.Transp.veicTransp.placa;
              dsNFETempPLACA_UF.AsString := ACBrNFe.NotasFiscais.Items[0].NFe.Transp.veicTransp.UF;
              dsNFETempSITUACAO.AsString := '1';
              dsNFETempDATA_SAIDA.AsDateTime := ACBrNFe.NotasFiscais.Items[0].NFe.Ide.dSaiEnt;
              dsNFETempHORA.AsString := FormatDateTime('HH:MM:SS',ACBrNFe.NotasFiscais.Items[0].NFe.Ide.hSaiEnt);
              dsNFETempSITUACAO_A.AsString := 'A';
              dsNFETempMODELO_NF.AsInteger := ACBrNFe.NotasFiscais.Items[0].NFe.Ide.modelo;
              dsNFETempSERIE_NF.AsInteger := ACBrNFe.NotasFiscais.Items[0].NFe.Ide.serie;
              if (ACBrNFe.NotasFiscais.Items[0].NFe.Total.ICMSTot.vBC > 0) and (ACBrNFe.NotasFiscais.Items[0].NFe.Total.ICMSTot.vICMS > 0) then
                dsNFETempALIQUOTA_ICMS.AsFloat := (ACBrNFe.NotasFiscais.Items[0].NFe.Total.ICMSTot.vICMS/ACBrNFe.NotasFiscais.Items[0].NFe.Total.ICMSTot.vBC)-1;
              dsNFETempSIT.AsString := 'N';
              dsNFETempMOVIMENTO.AsString := 'S';
              dsNFETempBAIXA_ESTOQUE.AsString := 'S';
              dsNFETempCUSTO_VENDA.AsString := 'V';
              dsNFETempPIS.AsFloat := ACBrNFe.NotasFiscais.Items[0].NFe.Total.ICMSTot.vPIS;
              dsNFETempCOFINS.AsFloat := ACBrNFe.NotasFiscais.Items[0].NFe.Total.ICMSTot.vCOFINS;
              dsNFETempNFE_SITUACAO.AsString := '6';
              dsNFETempCHAVE.AsString := ACBrNFe.NotasFiscais.Items[0].NFe.infNFe.ID;
              dsNFETempNATUREZA.AsString := 'venda';
              dsNFETempTIPO_FINALIDADE.AsInteger := 0;
              dsNFETempSEQEVENTO.AsInteger := 1;
              dsNFETemp.Post;
              for I := 0 to (ACBrNFe.NotasFiscais.Items[0].NFe.Det.Count -1) do begin
                dsItens.Append;
                dsItensCODNOTA.AsString := dsNFETempCODIGO.AsString;
                dsItensCODPRODUTO.AsString := ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Prod.cProd;
                dsItensDESPRODUTO.AsString := ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Prod.xProd;
                dsItensQTDE.AsFloat := ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Prod.qCom;
                dsItensUNITARIO.AsFloat := ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Prod.vUnCom;
                dsItensTOTAL.AsFloat := ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Prod.vProd;
                dsItensICMS.AsFloat := ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Imposto.ICMS.pICMS;
                dsItensIPI.AsFloat := ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Imposto.IPI.pIPI;
                dsItensCFOP.AsString := ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Prod.CFOP;
                dsItensVALOR_IPI.AsFloat := ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Imposto.IPI.vIPI;
                dsItensCLASSIFICACAO_FISCAL.AsString := ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Prod.NCM;
                dsItensCST.AsString := CSTICMSToStr(ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Imposto.ICMS.CST);
                dsItensVALOR_ICMS.AsFloat := ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Imposto.ICMS.vICMS;
                dsItensICMS_REDUZIDO.AsFloat := ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Imposto.ICMS.pRedBC;
                dsItensBASE_CALCULO.AsFloat := ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Imposto.ICMS.vBC;
                dsItensMARGEM_AGREGADA.AsFloat := ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Imposto.ICMS.pMVAST;
                dsItensBASE_SUB.AsFloat := ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Imposto.ICMS.vBCST;
                dsItensICMS_SUB.AsFloat := ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Imposto.ICMS.pICMSST;
                dsItensISENTO.AsFloat := 0;
                dsItensDESCONTO.AsFloat := ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Prod.vDesc;
                dsItensSUBTOTAL.AsFloat := ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Prod.vProd;
                dsItensPESO_BRUTO.AsFloat := 0;
                dsItensPESO_LIQUIDO.AsFloat := 0;
                dsItensCOMPLEMENTO.AsString := '';
                dsItensITEM.AsInteger := I+1;
                dsItensOUTRAS.AsFloat := ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Prod.vOutro;
                dsItensPIS_ALIQUOTA.AsFloat := ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Imposto.PIS.pPIS;
                dsItensPIS_BASE.AsFloat := ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Imposto.PIS.vBC;
                dsItensPIS_VALOR.AsFloat := ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Imposto.PIS.vPIS;
                dsItensCOFINS_ALIQUOTA.AsFloat := ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Imposto.COFINS.pCOFINS;
                dsItensCOFINS_BASE.AsFloat := ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Imposto.COFINS.vBC;
                dsItensCOFINS_VALOR.AsFloat := ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Imposto.COFINS.vCOFINS;
                dsItensCODBARRA.AsString := ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Prod.cEAN;
                dsItensCSOSN.AsString := CSOSNIcmsToStr(ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Imposto.ICMS.CSOSN);
                dsItensCEST.AsString := ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Prod.CEST;
                dsItensORIGEM.AsString :=  OrigToStr(ACBrNFe.NotasFiscais.Items[0].NFe.Det.Items[I].Imposto.ICMS.orig);
                dsItens.Post;
              end;
            end;
          end;
          pbW7.Position := pbW7.Position + 1;
          //Passar para o Proximo XML
          Ret := FindNext(F);
          end;
          end;
        end;
        dsClienteTemp.Filtered  := False;
        dsProdutoTemp.Filtered  := False;
        dsNFETemp.Filtered  := False;
        dsClienteTemp.IndexFieldNames := 'CODIGO';
        dsProdutoTemp.IndexFieldNames :=  'CODIGO';
        dsNFETemp.IndexFieldNames :=  'NUMERO';

      finally
        //Fechar o RET
        FindClose(F);
      end;
    end;
    //Quantidade de Registro na Tabela de Produtos e Tabela de Cliente
    mmo1.Lines.Add(IntToStr(dsClienteTemp.RecordCount)+' Cliente(s) Registrado(s)...');
    mmo1.Lines.Add(IntToStr(dsProdutoTemp.RecordCount)+' Produto(s) Registrado(s)...');
    //Fim de Processamento
    mmo1.Lines.Add('Fim de processamento...');
    //Ativar Abas
    cxtbshtProduto.Enabled                :=  True;
    cxtbshtCliente.Enabled                :=  True;
    //Mostrar as configurações
    pnlConfig.Visible := False;
  end;
end;

function ThreadListar.GerarCodigoDeBarras(Codigo: string): string;
var
  i, SomaPar, SomaImpar:Integer;
begin
  SomaPar:=0;
  SomaImpar:=0;
  for i:=1 to 12 do
    if Par(i) then
       SomaPar:=SomaPar+StrToInt(Codigo[i])
    else
       SomaImpar:=SomaImpar+StrToInt(Codigo[i]);
   SomaPar:=SomaPar*3;
   i:=0;
   while i < (SomaPar+SomaImpar) do
     Inc(i,10);
   Result:= Codigo + IntToStr(i-(SomaPar+SomaImpar));
end;

function ThreadListar.LimpaCNPJ(CNPJ: string): string;
begin
   While pos('-', CNPJ) <> 0 Do
      delete(CNPJ,pos('-', CNPJ),1);

    While pos('.', CNPJ) <> 0 Do
      delete(CNPJ,pos('.', CNPJ),1);

    While pos('/', CNPJ) <> 0 Do
      delete(CNPJ,pos('/', CNPJ),1);

    While pos(',', CNPJ) <> 0 Do
      delete(CNPJ,pos(',', CNPJ),1);

    Result := CNPJ;
end;

function ThreadListar.Par(Codigo: Integer): Boolean;
begin
  Result  :=  Codigo  Mod 2 = 0;
end;

function ThreadListar.zerarcodigo(codigo: string; Qtde: Integer): string;
begin
  while Length(codigo) < Qtde do
    codigo := '0' + codigo;
  result := codigo;
end;

end.
